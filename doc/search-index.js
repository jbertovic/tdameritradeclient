var searchIndex = JSON.parse('{\
"tdameritradeclient":{"doc":"tdameritradeclientTDAClient is the main struct that lets …","i":[[0,"account","tdameritradeclient","Module containing custom struct for getting and holding …",null,null],[5,"get_primary_account_id","tdameritradeclient::account","get primary account number attached to client",null,[[["tdaclient",3]],[["string",3],["result",6]]]],[5,"get_account_ids","","get all account numbers linked to client access …",null,[[["tdaclient",3]],[["vec",3],["result",6]]]],[5,"create_account_model","","Create <code>SecuritiesAccount</code> struct from client and account …",null,[[["tdaclient",3]],[["securitiesaccount",3],["result",6]]]],[3,"Positions","","Holds position details",null,null],[3,"SecuritiesAccount","","Holds account information that contains account …",null,null],[12,"account_id","","",0,null],[11,"get_position","","Retrieves a Vector of references for all positions for a …",0,[[],[["vec",3],["result",6]]]],[11,"total_position","","Totals all positions for a symbol and returns total …",0,[[["vec",3],["positions",3]],["result",6]]],[0,"auth","tdameritradeclient","utility module to help with authorization token, refresh …",null,null],[5,"get_token_from_refresh","tdameritradeclient::auth","used to get a valid <code>token</code> from <code>refresh_token</code> and <code>clientid</code>",null,[[],["string",3]]],[5,"get_refresh_from_refresh","","used to get a valid <code>refresh</code> from <code>refresh_token</code> and …",null,[[],["string",3]]],[5,"get_token_from_code","","used to get a valid <code>token</code> and <code>refresh_token</code> from <code>code</code>, …",null,[[],["string",3]]],[5,"get_code_weblink","","used to get code manually from tdameritrade website with …",null,[[],["string",3]]],[3,"TDauth","","These are tools to help manage authorization tokens with …",null,null],[11,"new_from_refresh","","create new <code>TDauth</code> with <code>refresh_token</code> and <code>clientid</code> if …",1,[[],["tdauth",3]]],[11,"new_from_code","","create new <code>TDauth</code> with <code>code</code>, <code>redirecturi</code> and <code>clientid</code> if …",1,[[],["tdauth",3]]],[11,"resolve_token_from_refresh","","get /oauth2/token token endpoint returns an access token …",1,[[],["string",3]]],[11,"resolve_token_fromcode","","get /oauth2/token token endpoint returns an access token …",1,[[],["string",3]]],[11,"get_tokens","","",1,[[]]],[4,"Account","tdameritradeclient","Query Parameters for /v1/accounts/",null,null],[13,"Positions","","",2,null],[13,"Orders","","",2,null],[13,"PositionsAndOrders","","",2,null],[4,"History","","Query Parameters for /v1/marketdata/{symbol}/pricehistory",null,null],[13,"PeriodType","","The type of period to show. Valid values are day, month, …",3,null],[13,"Period","","Number of periods to show. Valid by <code>PeriodType</code> (* is …",3,null],[13,"FrequencyType","","the type of frequency with which a new candle is formed. …",3,null],[13,"Frequency","","the number of the frequencyType to be included in each …",3,null],[13,"StartDate","","Start date as milliseconds since epoch. If startDate and …",3,null],[13,"EndDate","","End date as milliseconds since epoch. If startDate and …",3,null],[13,"NeedExendedHoursData","","true to return extended hours data, false for regular …",3,null],[4,"Instruments","","Query Parameters for /v1/instruments",null,null],[13,"Symbol","","Specify symbol or search parameter",4,null],[13,"SearchType","","Type of Request symbol-search: Retrieve instrument data …",4,null],[4,"OptionChain","","Query Parameters for /v1/marketdata/chains",null,null],[13,"Symbol","","Underlying symbol ",5,null],[13,"ContractType","","Type of contracts to return in the chain. Can be CALL, …",5,null],[13,"StrikeCount","","The number of strikes to return above and below the …",5,null],[13,"Strategy","","Passing a value returns a Strategy Chain. Possible values …",5,null],[13,"Interval","","Strike interval for spread strategy chains (see strategy …",5,null],[13,"Strike","","Provide a strike price to return options only at that …",5,null],[13,"IncludeQuotes","","Include quotes for options in the option chain. Can be …",5,null],[13,"Range","","Returns options for the given range. Possible values are: …",5,null],[13,"FromDate","","Only return expirations after this date. For strategies, …",5,null],[13,"ToDate","","Only return expirations before this date. For strategies, …",5,null],[13,"Volatility","","Volatility to use in calculations. Applies only to …",5,null],[13,"UnderlyingPrice","","Underlying price to use in calculations. Applies only to …",5,null],[13,"InterestRate","","Interest rate to use in calculations. Applies only to …",5,null],[13,"DaysToExpiration","","Days to expiration to use in calculations. Applies only …",5,null],[13,"ExpireMonth","","\'Return only options expiring in the specified month. …",5,null],[13,"OptionType","","Type of contracts to return. Possible values are: S: …",5,null],[4,"Order","","Query Parameters for /v1/orders/",null,null],[13,"MaxResults","","Max number of orders to retrieve",6,null],[13,"FromEnteredTime","","Specifies that no orders entered before this time should …",6,null],[13,"ToEnteredTime","","Specifies that no orders entered after this time should …",6,null],[13,"Status","","specifies type of orders to be returned: WORKING, FILLED, …",6,null],[4,"Transactions","","Query Parameters for /account/transactions",null,null],[13,"TransactionType","","type = ALL, TRADE, BUY_ONLY, SELL_ONLY, …",7,null],[13,"Symbol","","Specify symbol, otherwise all symbols",7,null],[13,"StartDate","","Start Date in \\\"yyyy-mm-dd\\\" Maximum date range is one year",7,null],[13,"EndDate","","End Date in \\\"yyyy-mm-dd\\\" Maximum data range is one year",7,null],[3,"TDAClient","","Main client to access TD Ameritrade endpoints",null,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tdameritradeclient::account","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tdameritradeclient::auth","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"default","tdameritradeclient::account","",9,[[],["positions",3]]],[11,"default","","",0,[[],["securitiesaccount",3]]],[11,"fmt","tdameritradeclient","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tdameritradeclient::account","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","tdameritradeclient::auth","",1,[[["formatter",3]],["result",6]]],[11,"serialize","tdameritradeclient::account","",9,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"new","tdameritradeclient","Create new base client that maintains Authorization Header…",8,[[["string",3]],["tdaclient",3]]],[11,"new_usingrefresh","","Create new base client that maintains Authorization Header…",8,[[],["tdaclient",3]]],[11,"new_usingcode","","Create new base client that maintains Authorization Header…",8,[[],["tdaclient",3]]],[11,"session_timeout","","change timeout configuration of Session",8,[[["duration",3]]]],[11,"get_user_principals","","get /userprincipals",8,[[]]],[11,"get_quotes","","get /marketdata/quotes?symbol=SYM1,SYM2,SYM3....",8,[[]]],[11,"get_todays_market_hours","","get /marketdata/{MARKET}/hours retrieve todays market …",8,[[]]],[11,"get_dates_market_hours","","get /marketdata/{MARKET}/hours retrieve market hours for …",8,[[]]],[11,"get_instruments","","get /instruments",8,[[]]],[11,"get_instrument","","get /instruments/cusip",8,[[]]],[11,"get_history","","get /marketdata/{SYM}/pricehistory additional query …",8,[[]]],[11,"get_option_chain","","get /marketdata/chains?symbol=SYM additional query …",8,[[]]],[11,"get_accounts","","get /accounts if there are more than one account linked …",8,[[]]],[11,"get_account","","get /accounts/{account} grabs one account with <code>account_id</code> …",8,[[]]],[11,"get_orders","","get /accounts/{account}/orders retrieve all working orders",8,[[]]],[11,"get_transactions","","get /accounts/{account}/transactions retrieve a specified …",8,[[]]],[11,"get_transaction","","get /accounts/{account}/transactions/{transactionId} …",8,[[]]],[11,"get_watchlists","","get /accounts/{account}/watchlists retrieves all …",8,[[]]],[11,"create_order","","Post /accounts/{account}/orders with JSON formated body …",8,[[],["string",3]]],[11,"delete_order","","Delete /accounts/{account}/orders/{order} Creates a …",8,[[]]],[11,"replace_order","","PUT /accounts/{account}/orders/{order} with JSON formated …",8,[[],["string",3]]]],"p":[[3,"SecuritiesAccount"],[3,"TDauth"],[4,"Account"],[4,"History"],[4,"Instruments"],[4,"OptionChain"],[4,"Order"],[4,"Transactions"],[3,"TDAClient"],[3,"Positions"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);